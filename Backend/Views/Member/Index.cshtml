@using Backend.Helper
@using Backend.Models
@using Microsoft.AspNet.Identity
@model IEnumerable<Backend.Models.MemberViewModel>

@{
    ViewBag.Title = "会员管理";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var total = 0m;
    var db = new vapEntities1();
    var userRole = Helper.GetUserRole(User.Identity.GetUserId(), db);
}

<div class="place">
    <span>位置：</span>
    <ul class="placeul">
        <li><a href="@Url.Action("Index","Home")">首页</a></li>
        <li><a href="#">会员管理</a></li>
    </ul>
</div>
<div class="formbody">
    @using (Html.BeginForm("Index", "Member", FormMethod.Get))
    {
        @Html.ValidationSummary()
        <ul class="seachform1">
            
            <li>
                <label>注册时间</label>
                @{
                    var options1 = new List<SelectListItem>();
                    
                    options1.Insert(0, new SelectListItem
                    {
                        Text = "最近一周",
                        Value = "1"
                    });
                    options1.Insert(1, new SelectListItem
                    {
                        Text = "最近一个月",
                        Value = "2"
                    });
                    options1.Insert(2, new SelectListItem
                    {
                        Text = "最近半年",
                        Value = "3"
                    });
                    options1.Insert(3, new SelectListItem
                    {
                        Text = "全部",
                        Value = "4"
                    });
                }
                @Html.DropDownList("cate", options1, new { @class = "scinput1" })
            </li>
        </ul>
        <ul class="seachform1">
            <li>
                <label>会员账号</label>
                @Html.TextBox("account", "", new { @class = "scinput1" })
            </li>
            <li>
                <label>会员状态</label>
                @{
                    var options = new List<SelectListItem>();
                    options.Insert(0, new SelectListItem
                    {
                        Text = "全部",
                        Value = ""
                    });
                    options.Insert(1, new SelectListItem
                    {
                        Text = "待审核",
                        Value = "待审核"
                    });
                    options.Insert(2, new SelectListItem
                    {
                        Text = "正常",
                        Value = "正常"
                    });
                    options.Insert(3, new SelectListItem
                    {
                        Text = "锁定",
                        Value = "锁定"
                    });
                }
                @Html.DropDownList("status", options, new { @class = "scinput1" })
            </li>
        </ul>
        <ul class="seachform1">
            <li>
                <label>起始时间</label>
                @Html.TextBox("startDate", "", new { @class = "scinput1" ,@Type="Date"})
            </li>
            <li>
                <label>截止时间</label>
                @Html.TextBox("endDate", "", new { @class = "scinput1", @Type = "Date" })
            </li>
            <li class="sarchbtn">
                <input name="" type="submit" class="scbtn" value="查询" />
                @*<input name="" type="button" class="scbtn2" value="导出" />*@
            </li>
        </ul>
    }


    <div class="formtitle"><span>会员列表</span></div>
    <table id="dataTable-Members">
        <thead>
            <tr>
                <th>
                    UID
                </th>
@if (!Helper.IsUserInRole(userRole, "Secretary"))
{ 
                <th>
                    推荐人UID
                </th>
}
                <th>
                    注册日期
                </th>
                <th>
                    登录名
                </th>
                <th>
                    状态
                </th>
                <th>
                    昵称
                </th>
                <th>
                    姓名
                </th>
                <th>
                    等级
                </th>
                <th>
                    会员业绩
                </th>
                @if (Helper.IsUserInRole(userRole, "Admin,ClientService"))
                {
                    <th>操作</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                total += item.Achievement;
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
@if (!Helper.IsUserInRole(userRole, "Secretary"))
{
                    <td>
                        @Html.DisplayFor(modelItem => item.ReferId)
                    </td>
}
                    <td>
                        @Html.DisplayFor(modelItem => item.RegisterTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RealName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MemberLevel)
                    </td>
                    <td style="text-align:right;">
                        ￥@Html.DisplayFor(modelItem => item.Achievement)
                    </td>
                    @if (Helper.IsUserInRole(userRole, "Admin,ClientService"))
                    {
                        <td>
                            @if (item.Status == VapLib.会员状态.待审核.ToString())
                            {
                                @Html.ActionLink("批准", "ApproveMember", new {id = item.Id}, new {@class = "tablelink"})
                            }
                            else if (item.Status == VapLib.会员状态.锁定.ToString())
                            {
                                @Html.ActionLink("解锁", "ApproveMember", new {id = item.Id}, new {@class = "tablelink"})
                            }
                            else if (item.Status == VapLib.会员状态.正常.ToString())
                            {
                                @Html.ActionLink("锁定", "LockMember", new {id = item.Id}, new {@class = "tablelink"})
                                @:|
                                @Html.ActionLink("身份认证", "ApproveIdentity", new {id = item.Id}, new {@class = "tablelink", onclick = "javascript:return confirm('确认通过该会员身份认证？')"})
                            }
                            | @Html.ActionLink("详情", "Edit", new {id = item.Id}, new {@class = "tablelink"})
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
    <span class="text-danger hide "><b>会员业绩汇总：￥@total</b></span>
</div>


<script>
    $(document).ready(function () {
        $('#dataTable-Members').DataTable({
            "searching": true,
        });
        $('#memberParent').slideDown();
    });
    
</script>